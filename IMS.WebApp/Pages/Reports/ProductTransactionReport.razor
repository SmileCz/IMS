@inject ISearchProductTransactionUseCase SearchProductTransactionUseCase
@inject IJSRuntime JsRuntime
@page "/reports/product"

<h3>Product Transactions</h3>
<br/>
<div id="print-area">
    <div class="row">
        <div class="col-4">
            <label for="invName">Product Name</label>
            <input id="invName" type="text" class="form-control" @bind-value="_inventoryName"/>
        </div>
        <div class="col">
            <label for="dateFrom">Date From</label>
            <input id="dateFrom" type="date" class="form-control" @bind-value="_dateFrom"/>
        </div>
        <div class="col">
            <label for="dateTo">Date To</label>
            <input id="dateTo" type="date" class="form-control" @bind-value="_dateTo"/>
        </div>
        <div class="col">
            <label for="activityType">Activity Type</label>
            <select id="activityType" class="form-control" @bind="_inventoryTransactionTypeId">
                <option value="0"></option>
                <option value="1">Produce Product</option>
                <option value="2">Sale Product</option>
            </select>
        </div>
        <div class="col">
            <label>&nbsp;</label>
            <button class="btn btn-primary form-control" @onclick="SearchProductTransactions">Search</button>
        </div>
        <div class="col">
            <label>&nbsp;</label>
            <button class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
        </div>
    </div>
    <br/>
    @if (_productTransactions is not null)
    {
        if (_productTransactions.Any())
        {
            <table class="table table-striped table-sm">
                <thead>
                <tr class="table-primary">
                    <th scope="col">Date</th>
                    <th scope="col">Inventory</th>
                    <th scope="col">Activity</th>
                    <th scope="col">Qty Before</th>
                    <th scope="col">Qty After</th>
                    <th scope="col">Unit Price</th>
                    <th scope="col">SO#</th>
                    <th scope="col">Production#</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var it in _productTransactions)
                {
                    <tr>
                        <td>@it.TransactionDate.ToString("MM/dd//yyyy")</td>
                        <td>@it.Product?.Name</td>
                        <td>
                            @switch (it.ActivityType)
                            {
                                case ProductTransactionType.ProduceProduct:
                                    @:Produce
                                    break;
                                case ProductTransactionType.SaleProduct:
                                    @:Sell
                                    break;
                                default:
                                    @:&nbsp;
                                    break;
                            }
                        </td>
                        <td>@it.QuantityBefore</td>
                        <td>@it.QuantityAfter</td>
                        <td>@it.UnitPrice?.ToString("c")</td>
                        <td>@it.SoNumber</td>
                        <td>@it.ProductionNumber</td>

                    </tr>
                }
                </tbody>
            </table>
        }
        else
        {
            <div class="card text-center">
                <div class="card-header text-white bg-danger">
                    Something is wrong. Opps
                </div>
                <div class="card-body">
                    <blockquote class="blockquote mb-0">
                        <p class="alert">I'm sorry, although our passion for the cause is overwhelming, we haven't found anything. Please correct the query parameters and hopefully, they will be correct</p>
                    </blockquote>
                </div>
            </div>
        }
    }
</div>


@code {
    private string _inventoryName = string.Empty;
    private DateTime? _dateFrom;
    private DateTime? _dateTo;
    private int _inventoryTransactionTypeId;
    private IEnumerable<ProductTransaction>? _productTransactions;

    private void PrintReport()
    {
        JsRuntime.InvokeVoidAsync("print");
    }

    private async Task SearchProductTransactions()
    {
        ProductTransactionType? transactionType = null;
        if (_inventoryTransactionTypeId != 0)
        {
            transactionType = (ProductTransactionType)_inventoryTransactionTypeId;
        }

        _productTransactions = await SearchProductTransactionUseCase.ExecuteAsync(_inventoryName, _dateFrom, _dateTo, transactionType);
    }

}