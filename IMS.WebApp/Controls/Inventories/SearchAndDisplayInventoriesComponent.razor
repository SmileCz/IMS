@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<SearchInventoryComponent OnSearchInventory="OnSearchInventoryAsync"></SearchInventoryComponent>
@if (_inventories.Count > 0)
{
    <div class="search-result">
        <ul>
            @foreach (var inv in _inventories)
            {
                <li
                    @key="inv.Id"
                    @onclick="@(async () => { await OnSelectInventoryAsync(inv); })">
                    @inv.Name
                </li>
            }
        </ul>
    </div>
}

@code {

    private List<Inventory> _inventories = new();

    [Parameter]
    public EventCallback<Inventory> OnInventorySelected { get; set; }

    private async Task OnSearchInventoryAsync(string searchTerm)
    {
        _inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(searchTerm)).ToList();
    }

    private async Task OnSelectInventoryAsync(Inventory inventory)
    {
        await OnInventorySelected.InvokeAsync(inventory);
        _inventories.Clear();
    }

}